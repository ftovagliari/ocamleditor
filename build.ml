(**

  This file is automatically generated by OCamlEditor. Do not edit.

*)

#use "topfind"
#require "str"
#require "unix"
#thread
#directory "src"
#directory "src/common"
#directory "src/oebuild"

#mod_use "argc.ml"
#mod_use "shell.ml"
#mod_use "ocaml_config.ml"
#mod_use "app_config.ml"
#mod_use "spawn.ml"
#mod_use "task.ml"
#mod_use "build_script_command.ml"
#mod_use "oebuild_util.ml"
#mod_use "oebuild_table.ml"
#mod_use "oebuild_dag.ml"
#mod_use "oebuild_dep.ml"
#mod_use "oebuild_dep_dag.ml"
#mod_use "oebuild_parallel.ml"
#mod_use "oebuild.ml"
#mod_use "build_script_util.ml"

open Oebuild
open Build_script_util
open Arg
open Task
open Printf

let arg_0_record_backtrace = ref (Some true)
let arg_1_use_modified_gtkThread = ref (Some false)
let arg_2_prefix = ref None
let arg_3_gmisclib = ref (Some false)
let arg_4_nsis = ref (Some false)
let arg_5_prefix = ref None
let arg_6_ver_1_8_0 = ref (Some false)

let cmd_line_args = [
  `Uninstall, [
    "-prefix", String (fun x -> arg_5_prefix := Some x),
      (" Uninstallation prefix [default: see \"ocaml tools/uninstall.ml -help\"]");
    "-ver-1.8.0", Bool (fun x -> arg_6_ver_1_8_0 := Some x),
      (" Uninstall OCamlEditor ver. 1.8.0 or earlier [default: " ^ (match !arg_6_ver_1_8_0 with Some x -> sprintf "%s" (if x then "Set" else "Not Set") | _ -> failwith "build_script_printer (flag)") ^ "]");
  ];
  `Install, [
    "-prefix", String (fun x -> arg_2_prefix := Some x),
      (" Installation prefix [default: see \"ocaml tools/install.ml -help\"]");
    "-gmisclib", Bool (fun x -> arg_3_gmisclib := Some x),
      (" Install the gmisclib library (miscellaneous widgets \n             based on LablGtk2) [default: " ^ (match !arg_3_gmisclib with Some x -> sprintf "%s" (if x then "Set" else "Not Set") | _ -> failwith "build_script_printer (flag)") ^ "]");
    "-nsis", Bool (fun x -> arg_4_nsis := Some x),
      (" Create a Win32 installer with NSIS [default: " ^ (match !arg_4_nsis with Some x -> sprintf "%s" (if x then "Set" else "Not Set") | _ -> failwith "build_script_printer (flag)") ^ "]");
  ];
  `Build, [
    "-record-backtrace", Bool (fun x -> arg_0_record_backtrace := Some x),
      (" Turn recording of exception backtraces on or off [default: " ^ (match !arg_0_record_backtrace with Some x -> string_of_bool x | _ ->  failwith "build_script_printer (bool)") ^ "]");
    "-use-modified-gtkThread", Bool (fun x -> arg_1_use_modified_gtkThread := Some x),
      (" Set this flag if you have Lablgtk-2.14.2 or earlier\n                           and you want to use the included modified version of \n                           gtkThread.ml to reduce CPU consumption [default: " ^ (match !arg_1_use_modified_gtkThread with Some x -> sprintf "%s" (if x then "Set" else "Not Set") | _ -> failwith "build_script_printer (flag)") ^ "]");
  ];
]

let external_tasks = [
  
  0, (fun command -> {
    et_name                  = "mkicons";
    et_env                   = [];
    et_env_replace           = false;
    et_dir                   = "..";
    et_cmd                   = "ocaml";
    et_args                  = [true,"tools/mkicons.ml"];
    et_phase                 = Some Before_compile;
    et_always_run_in_project = true;
    et_always_run_in_script  = true;
    et_readonly              = false;
    et_visible               = true;
  });
  
  1, (fun command -> {
    et_name                  = "RC_COMPILE";
    et_env                   = [];
    et_env_replace           = false;
    et_dir                   = "";
    et_cmd                   = "ocaml";
    et_args                  = [true,"../tools/rc_compile.ml"; true,"\"ocamleditor-msvc\""];
    et_phase                 = Some Before_compile;
    et_always_run_in_project = true;
    et_always_run_in_script  = true;
    et_readonly              = true;
    et_visible               = false;
  });
  
  2, (fun command -> {
    et_name                  = "prepare-build";
    et_env                   = [];
    et_env_replace           = false;
    et_dir                   = "..";
    et_cmd                   = "ocaml";
    et_args                  = [true,"tools/prepare_build.ml"];
    et_phase                 = Some Compile;
    et_always_run_in_project = true;
    et_always_run_in_script  = true;
    et_readonly              = false;
    et_visible               = true;
  });
  
  3, (fun command -> {
    et_name                  = "RC_COMPILE";
    et_env                   = [];
    et_env_replace           = false;
    et_dir                   = "";
    et_cmd                   = "ocaml";
    et_args                  = [true,"../tools/rc_compile.ml"; true,"\"launcher\""];
    et_phase                 = Some Before_compile;
    et_always_run_in_project = true;
    et_always_run_in_script  = true;
    et_readonly              = true;
    et_visible               = false;
  });
  
  4, (fun command -> {
    et_name                  = "SUBSYSTEM:WINDOWS";
    et_env                   = [];
    et_env_replace           = false;
    et_dir                   = "";
    et_cmd                   = "ocaml";
    et_args                  = [true,"../tools/editbin.ml"; true,"ocamleditorw"];
    et_phase                 = Some After_compile;
    et_always_run_in_project = true;
    et_always_run_in_script  = true;
    et_readonly              = true;
    et_visible               = false;
  });
  
  5, (fun command -> {
    et_name                  = "mkrelease";
    et_env                   = [];
    et_env_replace           = false;
    et_dir                   = "..";
    et_cmd                   = "ocaml";
    et_args                  = [true,"tools/mkrelease.ml"];
    et_phase                 = Some Before_clean;
    et_always_run_in_project = false;
    et_always_run_in_script  = false;
    et_readonly              = false;
    et_visible               = true;
  });
  
  6, (fun command -> {
    et_name                  = "mkversion";
    et_env                   = [];
    et_env_replace           = false;
    et_dir                   = "../tools";
    et_cmd                   = "ocaml";
    et_args                  = [true,"mkversion.ml"; true,"1.13.4"];
    et_phase                 = Some Before_clean;
    et_always_run_in_project = false;
    et_always_run_in_script  = false;
    et_readonly              = false;
    et_visible               = true;
  });
  
  7, (fun command -> {
    et_name                  = "generate_oebuild_script";
    et_env                   = [];
    et_env_replace           = false;
    et_dir                   = "..";
    et_cmd                   = "ocaml";
    et_args                  = [true,"tools/prepare_build.ml"; true,"-generate-oebuild-script"];
    et_phase                 = Some Before_clean;
    et_always_run_in_project = false;
    et_always_run_in_script  = false;
    et_readonly              = false;
    et_visible               = true;
  });
  
  8, (fun command -> {
    et_name                  = "Install OCamlEditor";
    et_env                   = [];
    et_env_replace           = false;
    et_dir                   = "..";
    et_cmd                   = "ocaml";
    et_args                  = [true,"tools/install.ml"; 
                                command = `Install && (!arg_4_nsis = Some true), "-nsis"; 
                                command = `Install && (!arg_3_gmisclib = Some true), "-gmisclib"; 
                                command = `Install, (match !arg_2_prefix with Some x -> sprintf "-prefix %S" x | _ -> "")];
    et_phase                 = Some Before_clean;
    et_always_run_in_project = false;
    et_always_run_in_script  = false;
    et_readonly              = false;
    et_visible               = true;
  });
  
  9, (fun command -> {
    et_name                  = "Uninstall OCamlEditor";
    et_env                   = [];
    et_env_replace           = false;
    et_dir                   = "..";
    et_cmd                   = "ocaml";
    et_args                  = [true,"tools/uninstall.ml"; 
                                command = `Uninstall && (!arg_6_ver_1_8_0 = Some true), "-ver-1.8.0"; 
                                command = `Uninstall, (match !arg_5_prefix with Some x -> sprintf "-prefix %S" x | _ -> "")];
    et_phase                 = Some Before_clean;
    et_always_run_in_project = false;
    et_always_run_in_script  = false;
    et_readonly              = false;
    et_visible               = true;
  });
  
  10, (fun command -> {
    et_name                  = "distclean";
    et_env                   = [];
    et_env_replace           = false;
    et_dir                   = "..";
    et_cmd                   = "ocaml";
    et_args                  = [true,"tools/distclean.ml"];
    et_phase                 = Some Before_clean;
    et_always_run_in_project = false;
    et_always_run_in_script  = false;
    et_readonly              = false;
    et_visible               = true;
  });
  
  11, (fun command -> {
    et_name                  = "install";
    et_env                   = [];
    et_env_replace           = false;
    et_dir                   = "..";
    et_cmd                   = "ocaml";
    et_args                  = [true,"tools/findlib.ml"; true,"install"];
    et_phase                 = None;
    et_always_run_in_project = false;
    et_always_run_in_script  = false;
    et_readonly              = true;
    et_visible               = true;
  });
  
  12, (fun command -> {
    et_name                  = "uninstall";
    et_env                   = [];
    et_env_replace           = false;
    et_dir                   = "..";
    et_cmd                   = "ocaml";
    et_args                  = [true,"tools/findlib.ml"; true,"uninstall"];
    et_phase                 = None;
    et_always_run_in_project = false;
    et_always_run_in_script  = false;
    et_readonly              = true;
    et_visible               = true;
  });
  
  13, (fun command -> {
    et_name                  = "reinstall";
    et_env                   = [];
    et_env_replace           = false;
    et_dir                   = "..";
    et_cmd                   = "ocaml";
    et_args                  = [true,"tools/findlib.ml"; true,"reinstall"];
    et_phase                 = None;
    et_always_run_in_project = false;
    et_always_run_in_script  = false;
    et_readonly              = true;
    et_visible               = true;
  });
  
  14, (fun command -> {
    et_name                  = "print";
    et_env                   = [];
    et_env_replace           = false;
    et_dir                   = "..";
    et_cmd                   = "ocaml";
    et_args                  = [true,"tools/findlib.ml"; true,"print"];
    et_phase                 = None;
    et_always_run_in_project = false;
    et_always_run_in_script  = false;
    et_readonly              = true;
    et_visible               = true;
  });
];;


let general_commands = [
  `Distclean, (10, "distclean");
  `Install, (8, "Install OCamlEditor");
  `Uninstall, (9, "Uninstall OCamlEditor");
]


(* Targets ==================================================== *)

let targets = [
  
  (* 1 *)
  "common", {
    descr                = "";
    num                  = 1;
    id                   = 4;
    output_name          = "common/common";
    target_type          = Library;
    compilation_bytecode = true;
    compilation_native   = true;
    toplevel_modules     = "common/common.ml";
    package              = "";
    search_path          = "common"; (* -I *)
    required_libraries   = "";
    compiler_flags       = "-g";
    linker_flags         = "-g";
    thread               = true;
    vmthread             = false;
    pp                   = "";
    inline               = None;
    nodep                = false;
    dontlinkdep          = false;
    dontaddopt           = false;
    library_install_dir  = ""; (* Relative to the Standard Library Directory *)
    other_objects        = "";
    external_tasks       = [];
    restrictions         = [];
    dependencies         = [];
    show                 = true;
    rc_filename          = None;
  };
  
  (* 2 *)
  "icons", {
    descr                = "";
    num                  = 2;
    id                   = 10;
    output_name          = "icons/icons";
    target_type          = Library;
    compilation_bytecode = true;
    compilation_native   = true;
    toplevel_modules     = "icons/icons.ml";
    package              = "lablgtk2";
    search_path          = "common"; (* -I *)
    required_libraries   = "";
    compiler_flags       = "-g";
    linker_flags         = "-g";
    thread               = false;
    vmthread             = false;
    pp                   = "";
    inline               = None;
    nodep                = false;
    dontlinkdep          = false;
    dontaddopt           = false;
    library_install_dir  = ""; (* Relative to the Standard Library Directory *)
    other_objects        = "";
    external_tasks       = [0];
    restrictions         = [];
    dependencies         = [];
    show                 = true;
    rc_filename          = None;
  };
  
  (* 3 *)
  "oebuildlib", {
    descr                = "";
    num                  = 3;
    id                   = 7;
    output_name          = "oebuildlib";
    target_type          = Library;
    compilation_bytecode = true;
    compilation_native   = true;
    toplevel_modules     = "oebuild/oebuild.ml oebuild/oebuild_dep_ext.ml";
    package              = "";
    search_path          = "common oebuild"; (* -I *)
    required_libraries   = "";
    compiler_flags       = "-w y";
    linker_flags         = "";
    thread               = true;
    vmthread             = false;
    pp                   = "";
    inline               = None;
    nodep                = false;
    dontlinkdep          = false;
    dontaddopt           = false;
    library_install_dir  = ""; (* Relative to the Standard Library Directory *)
    other_objects        = "";
    external_tasks       = [];
    restrictions         = [];
    dependencies         = [4];
    show                 = true;
    rc_filename          = None;
  };
  
  (* 4 *)
  "oebuild", {
    descr                = "";
    num                  = 4;
    id                   = 5;
    output_name          = "oebuild/oebuild";
    target_type          = Executable;
    compilation_bytecode = true;
    compilation_native   = true;
    toplevel_modules     = "oebuild/oebuild_tool.ml";
    package              = "str,unix";
    search_path          = "common oebuild"; (* -I *)
    required_libraries   = "common";
    compiler_flags       = "-w y";
    linker_flags         = "";
    thread               = true;
    vmthread             = false;
    pp                   = "";
    inline               = None;
    nodep                = false;
    dontlinkdep          = false;
    dontaddopt           = false;
    library_install_dir  = ""; (* Relative to the Standard Library Directory *)
    other_objects        = "";
    external_tasks       = [];
    restrictions         = [];
    dependencies         = [7];
    show                 = true;
    rc_filename          = None;
  };
  
  (* 5 *)
  "oeproc", {
    descr                = "";
    num                  = 5;
    id                   = 6;
    output_name          = "oeproc/oeproc";
    target_type          = Executable;
    compilation_bytecode = true;
    compilation_native   = true;
    toplevel_modules     = "oeproc/oeproc.ml";
    package              = "unix,str";
    search_path          = "common oeproc"; (* -I *)
    required_libraries   = "";
    compiler_flags       = "-w s";
    linker_flags         = "";
    thread               = true;
    vmthread             = false;
    pp                   = "";
    inline               = None;
    nodep                = false;
    dontlinkdep          = false;
    dontaddopt           = false;
    library_install_dir  = ""; (* Relative to the Standard Library Directory *)
    other_objects        = "";
    external_tasks       = [];
    restrictions         = ["IS_WIN32"];
    dependencies         = [];
    show                 = true;
    rc_filename          = None;
  };
  
  (* 6 *)
  "gmisclib", {
    descr                = "Miscellaneous widgets based on LablGtk2.";
    num                  = 6;
    id                   = 8;
    output_name          = "gmisclib";
    target_type          = Library;
    compilation_bytecode = true;
    compilation_native   = true;
    toplevel_modules     = "gmisclib/gmisclib.ml";
    package              = "lablgtk2";
    search_path          = "gmisclib"; (* -I *)
    required_libraries   = "";
    compiler_flags       = "-g";
    linker_flags         = "-g";
    thread               = false;
    vmthread             = false;
    pp                   = "";
    inline               = None;
    nodep                = false;
    dontlinkdep          = false;
    dontaddopt           = false;
    library_install_dir  = "gmisclib"; (* Relative to the Standard Library Directory *)
    other_objects        = "";
    external_tasks       = [];
    restrictions         = [];
    dependencies         = [];
    show                 = true;
    rc_filename          = None;
  };
  
  (* 7 *)
  "otherwidgets", {
    descr                = "";
    num                  = 7;
    id                   = 9;
    output_name          = "otherwidgets";
    target_type          = Library;
    compilation_bytecode = true;
    compilation_native   = true;
    toplevel_modules     = "otherwidgets/otherwidgets.ml";
    package              = "lablgtk2";
    search_path          = "icons common otherwidgets gmisclib"; (* -I *)
    required_libraries   = "gmisclib";
    compiler_flags       = "-w sy -g";
    linker_flags         = "-w sy -g";
    thread               = false;
    vmthread             = false;
    pp                   = "";
    inline               = None;
    nodep                = false;
    dontlinkdep          = false;
    dontaddopt           = false;
    library_install_dir  = ""; (* Relative to the Standard Library Directory *)
    other_objects        = "";
    external_tasks       = [];
    restrictions         = [];
    dependencies         = [8];
    show                 = true;
    rc_filename          = None;
  };
  
  (* 8 *)
  "ocamleditor", {
    descr                = "";
    num                  = 8;
    id                   = 12;
    output_name          = "ocamleditor";
    target_type          = Executable;
    compilation_bytecode = false;
    compilation_native   = true;
    toplevel_modules     = "ocamleditor.ml";
    package              = "compiler-libs.common,dynlink,lablgtk2,str,unix,xml-light";
    search_path          = "+ocamldoc gmisclib common icons otherwidgets oebuild "; (* -I *)
    required_libraries   = "odoc_info gmisclib common icons otherwidgets oebuildlib ocamleditor_lib";
    compiler_flags       = "-w syxm -g";
    linker_flags         = "-g";
    thread               = true;
    vmthread             = false;
    pp                   = "";
    inline               = Some 50;
    nodep                = true;
    dontlinkdep          = false;
    dontaddopt           = false;
    library_install_dir  = ""; (* Relative to the Standard Library Directory *)
    other_objects        = "";
    external_tasks       = [];
    restrictions         = [];
    dependencies         = [14; 19; 16; 26; 22];
    show                 = true;
    rc_filename          = None;
  };
  
  (* 9 *)
  "ocamleditor-bytecode", {
    descr                = "";
    num                  = 9;
    id                   = 0;
    output_name          = "ocamleditor";
    target_type          = Executable;
    compilation_bytecode = true;
    compilation_native   = false;
    toplevel_modules     = "ocamleditor.ml";
    package              = "compiler-libs.common,dynlink,lablgtk2,str,unix,xml-light";
    search_path          = "+ocamldoc gmisclib common icons otherwidgets oebuild "; (* -I *)
    required_libraries   = "odoc_info gmisclib common icons otherwidgets oebuildlib";
    compiler_flags       = "-w syxm -g";
    linker_flags         = "-g";
    thread               = true;
    vmthread             = false;
    pp                   = "";
    inline               = None;
    nodep                = false;
    dontlinkdep          = false;
    dontaddopt           = false;
    library_install_dir  = ""; (* Relative to the Standard Library Directory *)
    other_objects        = "";
    external_tasks       = [];
    restrictions         = [];
    dependencies         = [4; 10; 7; 5; 6; 8; 9; 20; 17; 18; 25];
    show                 = true;
    rc_filename          = None;
  };
  
  (* 9 *)
  "ocamleditor-msvc", {
    descr                = "";
    num                  = 0;
    id                   = 15;
    output_name          = "ocamleditor";
    target_type          = Executable;
    compilation_bytecode = false;
    compilation_native   = true;
    toplevel_modules     = "ocamleditor.ml";
    package              = "compiler-libs.common,dynlink,lablgtk2,str,unix,xml-light";
    search_path          = "+ocamldoc gmisclib common icons otherwidgets oebuild "; (* -I *)
    required_libraries   = "odoc_info gmisclib common icons otherwidgets oebuildlib ocamleditor_lib";
    compiler_flags       = "-w syxm -g";
    linker_flags         = "-g";
    thread               = true;
    vmthread             = false;
    pp                   = "";
    inline               = Some 50;
    nodep                = true;
    dontlinkdep          = false;
    dontaddopt           = false;
    library_install_dir  = ""; (* Relative to the Standard Library Directory *)
    other_objects        = "";
    external_tasks       = [1];
    restrictions         = ["IS_WIN32"];
    dependencies         = [14; 19; 16; 26; 22];
    show                 = false;
    rc_filename          = Some ".\\ocamleditor.opt.resource.rc";
  };
  
  (* 10 *)
  "ocamleditor-native", {
    descr                = "";
    num                  = 10;
    id                   = 11;
    output_name          = "ocamleditor";
    target_type          = Executable;
    compilation_bytecode = false;
    compilation_native   = true;
    toplevel_modules     = "ocamleditor.ml";
    package              = "compiler-libs.common,dynlink,lablgtk2,str,unix,xml-light";
    search_path          = "+ocamldoc gmisclib common icons otherwidgets oebuild "; (* -I *)
    required_libraries   = "odoc_info gmisclib common icons otherwidgets oebuildlib ocamleditor_lib";
    compiler_flags       = "-w syxm -g";
    linker_flags         = "-g";
    thread               = true;
    vmthread             = false;
    pp                   = "";
    inline               = Some 50;
    nodep                = false;
    dontlinkdep          = false;
    dontaddopt           = false;
    library_install_dir  = ""; (* Relative to the Standard Library Directory *)
    other_objects        = "";
    external_tasks       = [];
    restrictions         = [];
    dependencies         = [14; 19; 16; 26];
    show                 = true;
    rc_filename          = None;
  };
  
  (* 11 *)
  "ocamleditor-lib", {
    descr                = "";
    num                  = 11;
    id                   = 14;
    output_name          = "ocamleditor_lib";
    target_type          = Library;
    compilation_bytecode = false;
    compilation_native   = true;
    toplevel_modules     = "ocamleditor_lib.ml";
    package              = "compiler-libs.common,dynlink,lablgtk2,str,unix,xml-light";
    search_path          = "+ocamldoc gmisclib common icons otherwidgets oebuild "; (* -I *)
    required_libraries   = "";
    compiler_flags       = "-w syxm -g";
    linker_flags         = "-g";
    thread               = true;
    vmthread             = false;
    pp                   = "";
    inline               = Some 50;
    nodep                = false;
    dontlinkdep          = false;
    dontaddopt           = false;
    library_install_dir  = ""; (* Relative to the Standard Library Directory *)
    other_objects        = "";
    external_tasks       = [];
    restrictions         = [];
    dependencies         = [4; 10; 5; 6; 8; 9; 20];
    show                 = true;
    rc_filename          = None;
  };
  
  (* 12 *)
  "plugin-remote-bytecode", {
    descr                = "";
    num                  = 12;
    id                   = 17;
    output_name          = "../plugins/remote";
    target_type          = Library;
    compilation_bytecode = true;
    compilation_native   = false;
    toplevel_modules     = "remote.ml";
    package              = "curl,lablgtk2";
    search_path          = "common icons otherwidgets gmisclib"; (* -I *)
    required_libraries   = "";
    compiler_flags       = "-g -w -10";
    linker_flags         = "-g curl.cma";
    thread               = false;
    vmthread             = false;
    pp                   = "";
    inline               = None;
    nodep                = false;
    dontlinkdep          = true;
    dontaddopt           = false;
    library_install_dir  = ""; (* Relative to the Standard Library Directory *)
    other_objects        = "";
    external_tasks       = [];
    restrictions         = ["FINDLIB(curl)"];
    dependencies         = [];
    show                 = true;
    rc_filename          = None;
  };
  
  (* 13 *)
  "plugin-remote-native", {
    descr                = "";
    num                  = 13;
    id                   = 16;
    output_name          = "../plugins/remote";
    target_type          = Plugin;
    compilation_bytecode = false;
    compilation_native   = true;
    toplevel_modules     = "remote.ml";
    package              = "curl,lablgtk2";
    search_path          = "common icons otherwidgets gmisclib"; (* -I *)
    required_libraries   = "";
    compiler_flags       = "-g -w -10";
    linker_flags         = "-g curl.cmxa";
    thread               = false;
    vmthread             = false;
    pp                   = "";
    inline               = None;
    nodep                = false;
    dontlinkdep          = true;
    dontaddopt           = false;
    library_install_dir  = ""; (* Relative to the Standard Library Directory *)
    other_objects        = "";
    external_tasks       = [];
    restrictions         = ["FINDLIB(curl)"];
    dependencies         = [];
    show                 = true;
    rc_filename          = None;
  };
  
  (* 14 *)
  "plugin-dotviewer-bytecode", {
    descr                = "";
    num                  = 14;
    id                   = 18;
    output_name          = "../plugins/dot_viewer_svg";
    target_type          = Library;
    compilation_bytecode = true;
    compilation_native   = false;
    toplevel_modules     = "dot_viewer_svg.ml";
    package              = "lablgtk2,xml-light";
    search_path          = "common gmisclib otherwidgets"; (* -I *)
    required_libraries   = "gmisclib";
    compiler_flags       = "-w syxm -g";
    linker_flags         = "-g lablrsvg.cma";
    thread               = true;
    vmthread             = false;
    pp                   = "";
    inline               = None;
    nodep                = false;
    dontlinkdep          = true;
    dontaddopt           = false;
    library_install_dir  = ""; (* Relative to the Standard Library Directory *)
    other_objects        = "";
    external_tasks       = [];
    restrictions         = ["FINDLIB(lablgtk2.rsvg)"];
    dependencies         = [];
    show                 = true;
    rc_filename          = None;
  };
  
  (* 15 *)
  "plugin-dotviewer-native", {
    descr                = "";
    num                  = 15;
    id                   = 19;
    output_name          = "../plugins/dot_viewer_svg";
    target_type          = Plugin;
    compilation_bytecode = false;
    compilation_native   = true;
    toplevel_modules     = "dot_viewer_svg.ml";
    package              = "lablgtk2.rsvg";
    search_path          = "common gmisclib"; (* -I *)
    required_libraries   = "";
    compiler_flags       = "-g -w syxm";
    linker_flags         = "-g lablrsvg.cmxa";
    thread               = true;
    vmthread             = false;
    pp                   = "";
    inline               = None;
    nodep                = false;
    dontlinkdep          = true;
    dontaddopt           = false;
    library_install_dir  = ""; (* Relative to the Standard Library Directory *)
    other_objects        = "";
    external_tasks       = [];
    restrictions         = ["FINDLIB(lablgtk2.rsvg)"];
    dependencies         = [];
    show                 = true;
    rc_filename          = None;
  };
  
  (* 16 *)
  "plugin-diff-bytecode", {
    descr                = "";
    num                  = 16;
    id                   = 25;
    output_name          = "../plugins/plugin_diff";
    target_type          = Library;
    compilation_bytecode = true;
    compilation_native   = false;
    toplevel_modules     = "plugin_diff_gtext.ml plugin_diff.ml";
    package              = "compiler-libs.common,diff,lablgtk2,str,unix,xml-light";
    search_path          = "common otherwidgets gmisclib oebuild +ocamldoc icons"; (* -I *)
    required_libraries   = "";
    compiler_flags       = "-g -w -26-10";
    linker_flags         = "-g odiff.cma";
    thread               = true;
    vmthread             = false;
    pp                   = "";
    inline               = None;
    nodep                = false;
    dontlinkdep          = true;
    dontaddopt           = false;
    library_install_dir  = ""; (* Relative to the Standard Library Directory *)
    other_objects        = "";
    external_tasks       = [];
    restrictions         = ["FINDLIB(diff)"];
    dependencies         = [];
    show                 = true;
    rc_filename          = None;
  };
  
  (* 17 *)
  "plugin-diff-native", {
    descr                = "";
    num                  = 17;
    id                   = 26;
    output_name          = "../plugins/plugin_diff";
    target_type          = Plugin;
    compilation_bytecode = false;
    compilation_native   = true;
    toplevel_modules     = "plugin_diff_gtext.ml plugin_diff.ml ";
    package              = "compiler-libs,diff,lablgtk2,str,unix";
    search_path          = "common otherwidgets gmisclib oebuild icons"; (* -I *)
    required_libraries   = "";
    compiler_flags       = "-g -w -26-10";
    linker_flags         = "-g odiff.cmxa";
    thread               = true;
    vmthread             = false;
    pp                   = "";
    inline               = None;
    nodep                = false;
    dontlinkdep          = true;
    dontaddopt           = false;
    library_install_dir  = ""; (* Relative to the Standard Library Directory *)
    other_objects        = "";
    external_tasks       = [];
    restrictions         = ["FINDLIB(diff)"];
    dependencies         = [];
    show                 = true;
    rc_filename          = None;
  };
  
  (* 18 *)
  "prepare-build", {
    descr                = "";
    num                  = 18;
    id                   = 20;
    output_name          = "";
    target_type          = External;
    compilation_bytecode = true;
    compilation_native   = false;
    toplevel_modules     = "";
    package              = "";
    search_path          = ""; (* -I *)
    required_libraries   = "";
    compiler_flags       = "";
    linker_flags         = "";
    thread               = false;
    vmthread             = false;
    pp                   = "";
    inline               = None;
    nodep                = false;
    dontlinkdep          = false;
    dontaddopt           = false;
    library_install_dir  = ""; (* Relative to the Standard Library Directory *)
    other_objects        = "";
    external_tasks       = [2];
    restrictions         = [];
    dependencies         = [];
    show                 = true;
    rc_filename          = None;
  };
  
  (* 19 *)
  "launcher", {
    descr                = "Utility to open OCaml files from the file manager";
    num                  = 19;
    id                   = 22;
    output_name          = "ocamleditorw";
    target_type          = Executable;
    compilation_bytecode = false;
    compilation_native   = true;
    toplevel_modules     = "ocamleditor_launcher.ml";
    package              = "unix,str";
    search_path          = "common"; (* -I *)
    required_libraries   = "common";
    compiler_flags       = "-compact";
    linker_flags         = "-compact";
    thread               = false;
    vmthread             = false;
    pp                   = "";
    inline               = None;
    nodep                = false;
    dontlinkdep          = false;
    dontaddopt           = true;
    library_install_dir  = ""; (* Relative to the Standard Library Directory *)
    other_objects        = "";
    external_tasks       = [3; 4];
    restrictions         = ["OCAML(system<>mingw)"];
    dependencies         = [];
    show                 = true;
    rc_filename          = Some ".\\ocamleditorw.resource.rc";
  };
  
  (* 20 *)
  "tools", {
    descr                = "";
    num                  = 20;
    id                   = 13;
    output_name          = "";
    target_type          = External;
    compilation_bytecode = true;
    compilation_native   = false;
    toplevel_modules     = "";
    package              = "";
    search_path          = ""; (* -I *)
    required_libraries   = "";
    compiler_flags       = "";
    linker_flags         = "";
    thread               = false;
    vmthread             = false;
    pp                   = "";
    inline               = None;
    nodep                = false;
    dontlinkdep          = false;
    dontaddopt           = false;
    library_install_dir  = ""; (* Relative to the Standard Library Directory *)
    other_objects        = "";
    external_tasks       = [5; 6; 7; 8; 9; 10];
    restrictions         = [];
    dependencies         = [];
    show                 = true;
    rc_filename          = None;
  };
  
  (* 20 *)
  "FINDLIB-TOOLS", {
    descr                = "";
    num                  = 0;
    id                   = 27;
    output_name          = "";
    target_type          = External;
    compilation_bytecode = true;
    compilation_native   = false;
    toplevel_modules     = "";
    package              = "";
    search_path          = ""; (* -I *)
    required_libraries   = "";
    compiler_flags       = "";
    linker_flags         = "";
    thread               = false;
    vmthread             = false;
    pp                   = "";
    inline               = None;
    nodep                = false;
    dontlinkdep          = false;
    dontaddopt           = false;
    library_install_dir  = ""; (* Relative to the Standard Library Directory *)
    other_objects        = "";
    external_tasks       = [11; 12; 13; 14];
    restrictions         = [];
    dependencies         = [];
    show                 = false;
    rc_filename          = None;
  };
];;

(* End of Targets ============================================= *)

let _ = main ~cmd_line_args ~external_tasks ~general_commands ~targets
